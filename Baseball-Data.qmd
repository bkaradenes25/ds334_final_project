---
title: "Final"
author: "Brendan Karadenes"
format:
  html:
    embed-resources: true
---
## Introduction

For my final project I am working on using MLB data from the baseball r package. I'm interested in creating batting spray charts for each ball in play in the playoffs from 2019-2023.

## Loading the Necessary Packages
```{r}
library(baseballr)
library(tidyverse)
library(shiny)
```

## Scraping playoff data from the past 5 years
```{r}
playoffs_23 <- 
  scrape_statcast_savant_batter_all(start_date = "2023-10-03",
                                    end_date = "2023-11-01") %>%
  filter(type == "X")
```

```{r}
playoffs_22 <- 
  scrape_statcast_savant_batter_all(start_date = "2022-10-07",
                                    end_date = "2022-11-05") %>%
  filter(type == "X")
```

```{r}
playoffs_21 <- 
  scrape_statcast_savant_batter_all(start_date = "2021-10-05",
                                    end_date = "2021-11-02") %>%
  filter(type == "X")
```


```{r}
playoffs_20 <- 
  scrape_statcast_savant_batter_all(start_date = "2020-09-29",
                                    end_date = "2020-10-27") %>%
  filter(type == "X")
```

```{r}
playoffs_19 <- 
  scrape_statcast_savant_batter_all(start_date = "2019-10-01",
                                    end_date = "2019-10-30") %>%
  filter(type == "X")
```

## Joining the data
```{r}
data1 <- full_join(playoffs_19, playoffs_20)
data2 <- full_join(data1, playoffs_21)
data3 <- full_join(data2, playoffs_22)
batted_balls <- full_join(data3, playoffs_23)
```

## Saving scraped data as csv 
```{r}
write.csv(batted_balls, "batted_balls.csv", row.names = FALSE)
batted_balls <- read.csv("batted_balls.csv")
batted_balls <- batted_balls %>%
  mutate(year = year(ymd(game_date)))
```

## Creating the shiny app
```{r}
# Ensuring only 1 name for each player
choices <- batted_balls |> distinct(player_name) |> pull(player_name)
ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
    selectInput("player_name", label = "Choose a Player",
                choices = choices, selected = NULL),
    radioButtons("year", label = "Choose a Year",
                 choices = "All", selected = "All"),
    sliderInput("distance",
                "Select Minimum Distance",
                min = 0, max = 500, value = 0, step = 10)
     ),
  mainPanel(
    plotOutput("spray_chart")
  )
)
)

server <- function(input, output, session) {
  # Updating the radio buttons so only years that player put a ball in play show up
  observeEvent(input$player_name,{
    years <- batted_balls %>%
      filter(player_name == input$player_name) %>%
      distinct(year) %>%
      pull(year)
    updateRadioButtons(
      session = session,
      inputId = "year",
      label = "Choose a Year",
      choices = c("All", as.character(years)),
      selected = "All"
    )
  })
  base_graph <- reactive({
    filtered_data <- batted_balls %>%
      filter(player_name == input$player_name) 
    
    if(input$year != "All") {
    filtered_data <- filtered_data %>%
      filter(year == input$year)
    }
    
    filtered_data <- filtered_data %>%
      filter(hit_distance_sc >= input$distance)
    
     filtered_data %>%
       mutate(events = case_when(events %in% c("single", "double", "triple", "home_run") ~ events, TRUE ~ "out")) 
  })
  
  output$spray_chart <- renderPlot({
    filtered_data <- base_graph()
    ggspraychart(
  data = filtered_data,
  x_value = "hc_x",
  y_value = "-hc_y",
  fill_value = "events",
  fill_palette = c("single" = "red",    
  "double" = "blue",   
  "triple" = "yellow",  
  "home_run" = "purple",   
  "out" = "black" ),
  fill_legend_title = "Outcomes",
  density = FALSE,
  bin_size = 15,
  point_alpha = 0.75,
  point_size = 2,
  frame = NULL
)
  })
}

shinyApp(ui, server)
```


